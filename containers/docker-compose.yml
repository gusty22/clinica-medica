version: '3.8'

services:


  administrativo:
    build:
      context: ../clinica-medica-administrativo
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: local
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-administrativo:3306/clinica_medica_administrativo?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
    depends_on:
      - mysql-administrativo
    restart: unless-stopped
    entrypoint: ["/wait-for-it.sh", "mysql-administrativo", "3306", "--", "java", "-jar", "/app/app.jar"]


  agendamento:
    build:
      context: ../clinica-medica-agendamento
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-agendamento:3306/clinica_medica_agendamento?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
    depends_on:
      - mysql-agendamento
    restart: unless-stopped
    entrypoint: ["/wait-for-it.sh", "mysql-agendamento", "3306", "--", "java", "-jar", "/app/app.jar"]


  atendimento:
    build:
      context: ../clinica-medica-atendimento
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-atendimento:3306/clinica_medica_atendimento?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ""
    depends_on:
      - mysql-atendimento
    restart: unless-stopped
    entrypoint: ["/wait-for-it.sh", "mysql-atendimento", "3306", "--", "java", "-jar", "/app/app.jar"]


  mysql-administrativo:
    image: mysql:8.0
    container_name: mysql-administrativo
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: clinica_medica_administrativo
    ports:
      - "4040:3306"
    volumes:
      - mysql_administrativo_data:/var/lib/mysql
    restart: unless-stopped


  mysql-agendamento:
    image: mysql:8.0
    container_name: mysql-agendamento
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: clinica_medica_agendamento
    ports:
      - "4041:3306"
    volumes:
      - mysql_agendamento_data:/var/lib/mysql
    restart: unless-stopped


  mysql-atendimento:
    image: mysql:8.0
    container_name: mysql-atendimento
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: clinica_medica_atendimento
    ports:
      - "4042:3306"
    volumes:
      - mysql_atendimento_data:/var/lib/mysql
    restart: unless-stopped


  sonarqube-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    ports:
      - "5432:5432"
    volumes:
      - sonarqube-postgres-data:/var/lib/postgresql/data
    restart: unless-stopped


  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    environment:
      SONARQUBE_JDBC_URL: jdbc:postgresql://sonarqube-postgres:5432/sonarqube
      SONARQUBE_JDBC_USERNAME: sonar
      SONARQUBE_JDBC_PASSWORD: sonar
    ports:
      - "9000:9000"
    depends_on:
      - sonarqube-postgres
    restart: unless-stopped


  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: sonar-scanner
    environment:
      - SONAR_HOST_URL=http://sonarqube:9000
      - SONAR_LOGIN=${SONAR_LOGIN_TOKEN}
      - SONAR_PROJECT_KEY=clinica-medica
      - SONAR_SOURCES=.
      - SONAR_JAVA_BINARIES=./**/target/classes
      - SONAR_EXCLUSIONS=**/target/**,**/test/**
    volumes:
      - ..:/usr/src
    command: >
      /bin/sh -c "
        until wget -q -O - http://sonarqube:9000/api/system/status; do
          echo 'Aguardando o SonarQube iniciar...';
          sleep 5;
        done;
        sonar-scanner;
      "
    depends_on:
      - sonarqube
    restart: "no"


volumes:
  mysql_administrativo_data:
  mysql_agendamento_data:
  mysql_atendimento_data:
  sonarqube-postgres-data: